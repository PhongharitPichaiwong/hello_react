{"ast":null,"code":"var _jsxFileName = \"/Users/phongharit/Development/hello_react/src/provider/ThemeProvider.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext(undefined);\nconst THEME_STORAGE_KEY = 'app-theme';\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setThemeState] = useState(() => {\n    if (typeof window !== 'undefined') {\n      const savedTheme = localStorage.getItem(THEME_STORAGE_KEY);\n      return savedTheme && ['light', 'dark'].includes(savedTheme) ? savedTheme : 'light';\n    }\n    return 'light';\n  });\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n    localStorage.setItem(THEME_STORAGE_KEY, theme);\n    document.body.className = `theme-${theme}`;\n  }, [theme]);\n  const setTheme = newTheme => {\n    if (['light', 'dark'].includes(newTheme)) {\n      setThemeState(newTheme);\n    } else {\n      console.warn(`Invalid theme: ${newTheme}. Using 'light' as fallback.`);\n      setThemeState('light');\n    }\n  };\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n  const value = {\n    theme,\n    setTheme,\n    toggleTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"hvDP5gMtNeLJxnairIcg93KYwhM=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","jsxDEV","_jsxDEV","ThemeContext","undefined","THEME_STORAGE_KEY","ThemeProvider","children","_s","theme","setThemeState","window","savedTheme","localStorage","getItem","includes","document","documentElement","setAttribute","setItem","body","className","setTheme","newTheme","console","warn","toggleTheme","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/phongharit/Development/hello_react/src/provider/ThemeProvider.tsx"],"sourcesContent":["import { createContext, ReactNode, useEffect, useState } from 'react';\n\ntype Theme = 'light' | 'dark';\n\ninterface ThemeContextType {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n  toggleTheme: () => void;\n}\n\nexport const ThemeContext = createContext<ThemeContextType | undefined>(\n  undefined\n);\n\nconst THEME_STORAGE_KEY = 'app-theme';\n\nexport const ThemeProvider = ({ children }: { children: ReactNode }) => {\n  const [theme, setThemeState] = useState<Theme>(() => {\n    if (typeof window !== 'undefined') {\n      const savedTheme = localStorage.getItem(THEME_STORAGE_KEY) as Theme;\n      return savedTheme && ['light', 'dark'].includes(savedTheme)\n        ? savedTheme\n        : 'light';\n    }\n    return 'light';\n  });\n\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n\n    localStorage.setItem(THEME_STORAGE_KEY, theme);\n\n    document.body.className = `theme-${theme}`;\n  }, [theme]);\n\n  const setTheme = (newTheme: Theme) => {\n    if (['light', 'dark'].includes(newTheme)) {\n      setThemeState(newTheme);\n    } else {\n      console.warn(`Invalid theme: ${newTheme}. Using 'light' as fallback.`);\n      setThemeState('light');\n    }\n  };\n\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  const value: ThemeContextType = {\n    theme,\n    setTheme,\n    toggleTheme,\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAaC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUtE,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CACvCM,SACF,CAAC;AAED,MAAMC,iBAAiB,GAAG,WAAW;AAErC,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM,CAACC,KAAK,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAQ,MAAM;IACnD,IAAI,OAAOW,MAAM,KAAK,WAAW,EAAE;MACjC,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAACT,iBAAiB,CAAU;MACnE,OAAOO,UAAU,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAACG,QAAQ,CAACH,UAAU,CAAC,GACvDA,UAAU,GACV,OAAO;IACb;IACA,OAAO,OAAO;EAChB,CAAC,CAAC;EAEFb,SAAS,CAAC,MAAM;IACdiB,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAET,KAAK,CAAC;IAE1DI,YAAY,CAACM,OAAO,CAACd,iBAAiB,EAAEI,KAAK,CAAC;IAE9CO,QAAQ,CAACI,IAAI,CAACC,SAAS,GAAG,SAASZ,KAAK,EAAE;EAC5C,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMa,QAAQ,GAAIC,QAAe,IAAK;IACpC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAACR,QAAQ,CAACQ,QAAQ,CAAC,EAAE;MACxCb,aAAa,CAACa,QAAQ,CAAC;IACzB,CAAC,MAAM;MACLC,OAAO,CAACC,IAAI,CAAC,kBAAkBF,QAAQ,8BAA8B,CAAC;MACtEb,aAAa,CAAC,OAAO,CAAC;IACxB;EACF,CAAC;EAED,MAAMgB,WAAW,GAAGA,CAAA,KAAM;IACxBJ,QAAQ,CAACb,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAChD,CAAC;EAED,MAAMkB,KAAuB,GAAG;IAC9BlB,KAAK;IACLa,QAAQ;IACRI;EACF,CAAC;EAED,oBACExB,OAAA,CAACC,YAAY,CAACyB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAApB,QAAA,EAAEA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAwB,CAAC;AAE3E,CAAC;AAACxB,EAAA,CAzCWF,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}