{"ast":null,"code":"var _jsxFileName = \"/Users/phongharit/Development/hello_react/src/components/shared/ThemeToggle/index.tsx\",\n  _s = $RefreshSig$();\nimport { useAppTheme } from '../../../hooks/useAppTheme';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ThemeToggle({\n  variant = 'default',\n  className = ''\n}) {\n  _s();\n  const {\n    theme,\n    toggleTheme\n  } = useAppTheme();\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleTheme,\n    className: `btn btn-theme ${className}`,\n    title: `Switch to ${theme === 'light' ? 'Dark' : 'Light'} mode`,\n    \"aria-label\": `Switch to ${theme === 'light' ? 'dark' : 'light'} theme`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: theme === 'light' ? 'üåô' : '‚òÄÔ∏è'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), variant === 'default' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: theme === 'light' ? 'Dark' : 'Light'\n    }, void 0, false), variant === 'icon-only' && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sr-only\",\n      children: [theme === 'light' ? 'Dark' : 'Light', \" mode\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(ThemeToggle, \"Aiq7cLTWypOv7ZI6P66SywvmvLI=\", false, function () {\n  return [useAppTheme];\n});\n_c = ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["useAppTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","ThemeToggle","variant","className","_s","theme","toggleTheme","onClick","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/phongharit/Development/hello_react/src/components/shared/ThemeToggle/index.tsx"],"sourcesContent":["import { useAppTheme } from '../../../hooks/useAppTheme';\n\ninterface ThemeToggleProps {\n  variant?: 'default' | 'icon-only';\n  className?: string;\n}\n\nexport function ThemeToggle({\n  variant = 'default',\n  className = '',\n}: ThemeToggleProps) {\n  const { theme, toggleTheme } = useAppTheme();\n\n  return (\n    <button\n      onClick={toggleTheme}\n      className={`btn btn-theme ${className}`}\n      title={`Switch to ${theme === 'light' ? 'Dark' : 'Light'} mode`}\n      aria-label={`Switch to ${theme === 'light' ? 'dark' : 'light'} theme`}\n    >\n      <span aria-hidden=\"true\">{theme === 'light' ? 'üåô' : '‚òÄÔ∏è'}</span>\n      {variant === 'default' && <>{theme === 'light' ? 'Dark' : 'Light'}</>}\n      {variant === 'icon-only' && (\n        <span className=\"sr-only\">\n          {theme === 'light' ? 'Dark' : 'Light'} mode\n        </span>\n      )}\n    </button>\n  );\n}\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAOzD,OAAO,SAASC,WAAWA,CAAC;EAC1BC,OAAO,GAAG,SAAS;EACnBC,SAAS,GAAG;AACI,CAAC,EAAE;EAAAC,EAAA;EACnB,MAAM;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGV,WAAW,CAAC,CAAC;EAE5C,oBACEE,OAAA;IACES,OAAO,EAAED,WAAY;IACrBH,SAAS,EAAE,iBAAiBA,SAAS,EAAG;IACxCK,KAAK,EAAE,aAAaH,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,OAAQ;IAChE,cAAY,aAAaA,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,QAAS;IAAAI,QAAA,gBAEtEX,OAAA;MAAM,eAAY,MAAM;MAAAW,QAAA,EAAEJ,KAAK,KAAK,OAAO,GAAG,IAAI,GAAG;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAChEX,OAAO,KAAK,SAAS,iBAAIJ,OAAA,CAAAE,SAAA;MAAAS,QAAA,EAAGJ,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG;IAAO,gBAAG,CAAC,EACpEH,OAAO,KAAK,WAAW,iBACtBJ,OAAA;MAAMK,SAAS,EAAC,SAAS;MAAAM,QAAA,GACtBJ,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,EAAC,OACxC;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb;AAACT,EAAA,CAtBeH,WAAW;EAAA,QAIML,WAAW;AAAA;AAAAkB,EAAA,GAJ5Bb,WAAW;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}