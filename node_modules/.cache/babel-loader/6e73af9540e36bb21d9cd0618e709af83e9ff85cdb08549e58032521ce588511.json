{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { ThemeContext } from '../provider/ThemeProvider';\nexport const useAppTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useAppTheme must be used within a ThemeProvider');\n  }\n  const {\n    theme,\n    setTheme,\n    toggleTheme\n  } = context;\n\n  // Utility functions for better DX\n  const isLight = theme === 'light';\n  const isDark = theme === 'dark';\n\n  // Helper to get theme-specific values\n  const getThemeValue = (lightValue, darkValue) => {\n    return theme === 'light' ? lightValue : darkValue;\n  };\n\n  // Helper to get CSS variable value\n  const getCSSVariable = variableName => {\n    if (typeof window !== 'undefined') {\n      return getComputedStyle(document.documentElement).getPropertyValue(variableName).trim();\n    }\n    return '';\n  };\n\n  // Helper to set a custom CSS variable\n  const setCSSVariable = (variableName, value) => {\n    if (typeof window !== 'undefined') {\n      document.documentElement.style.setProperty(variableName, value);\n    }\n  };\n  return {\n    // Core theme state\n    theme,\n    setTheme,\n    toggleTheme,\n    // Utility flags\n    isLight,\n    isDark,\n    // Helper functions\n    getThemeValue,\n    getCSSVariable,\n    setCSSVariable\n  };\n};\n_s(useAppTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");","map":{"version":3,"names":["useContext","ThemeContext","useAppTheme","_s","context","Error","theme","setTheme","toggleTheme","isLight","isDark","getThemeValue","lightValue","darkValue","getCSSVariable","variableName","window","getComputedStyle","document","documentElement","getPropertyValue","trim","setCSSVariable","value","style","setProperty"],"sources":["/Users/phongharit/Development/hello_react/src/hooks/useAppTheme.tsx"],"sourcesContent":["import { useContext } from 'react';\nimport { ThemeContext } from '../provider/ThemeProvider';\n\nexport const useAppTheme = () => {\n  const context = useContext(ThemeContext);\n  \n  if (!context) {\n    throw new Error('useAppTheme must be used within a ThemeProvider');\n  }\n  \n  const { theme, setTheme, toggleTheme } = context;\n  \n  // Utility functions for better DX\n  const isLight = theme === 'light';\n  const isDark = theme === 'dark';\n  \n  // Helper to get theme-specific values\n  const getThemeValue = <T>(lightValue: T, darkValue: T): T => {\n    return theme === 'light' ? lightValue : darkValue;\n  };\n  \n  // Helper to get CSS variable value\n  const getCSSVariable = (variableName: string): string => {\n    if (typeof window !== 'undefined') {\n      return getComputedStyle(document.documentElement)\n        .getPropertyValue(variableName)\n        .trim();\n    }\n    return '';\n  };\n  \n  // Helper to set a custom CSS variable\n  const setCSSVariable = (variableName: string, value: string): void => {\n    if (typeof window !== 'undefined') {\n      document.documentElement.style.setProperty(variableName, value);\n    }\n  };\n  \n  return {\n    // Core theme state\n    theme,\n    setTheme,\n    toggleTheme,\n    \n    // Utility flags\n    isLight,\n    isDark,\n    \n    // Helper functions\n    getThemeValue,\n    getCSSVariable,\n    setCSSVariable,\n  };\n};\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,YAAY,QAAQ,2BAA2B;AAExD,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,OAAO,GAAGJ,UAAU,CAACC,YAAY,CAAC;EAExC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;EACpE;EAEA,MAAM;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGJ,OAAO;;EAEhD;EACA,MAAMK,OAAO,GAAGH,KAAK,KAAK,OAAO;EACjC,MAAMI,MAAM,GAAGJ,KAAK,KAAK,MAAM;;EAE/B;EACA,MAAMK,aAAa,GAAGA,CAAIC,UAAa,EAAEC,SAAY,KAAQ;IAC3D,OAAOP,KAAK,KAAK,OAAO,GAAGM,UAAU,GAAGC,SAAS;EACnD,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIC,YAAoB,IAAa;IACvD,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;MACjC,OAAOC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAC9CC,gBAAgB,CAACL,YAAY,CAAC,CAC9BM,IAAI,CAAC,CAAC;IACX;IACA,OAAO,EAAE;EACX,CAAC;;EAED;EACA,MAAMC,cAAc,GAAGA,CAACP,YAAoB,EAAEQ,KAAa,KAAW;IACpE,IAAI,OAAOP,MAAM,KAAK,WAAW,EAAE;MACjCE,QAAQ,CAACC,eAAe,CAACK,KAAK,CAACC,WAAW,CAACV,YAAY,EAAEQ,KAAK,CAAC;IACjE;EACF,CAAC;EAED,OAAO;IACL;IACAjB,KAAK;IACLC,QAAQ;IACRC,WAAW;IAEX;IACAC,OAAO;IACPC,MAAM;IAEN;IACAC,aAAa;IACbG,cAAc;IACdQ;EACF,CAAC;AACH,CAAC;AAACnB,EAAA,CAlDWD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}