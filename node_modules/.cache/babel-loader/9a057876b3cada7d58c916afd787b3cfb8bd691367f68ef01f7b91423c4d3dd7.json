{"ast":null,"code":"var _jsxFileName = \"/Users/phongharit/Development/hello_react/hello-react/src/App.tsx\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n// import BasicCss from './Pages/BasicCss';\n// import ContextProvider from './Pages/ContextProvider';\n// import UseRef from './Pages/UseRef';\n// import { CounterA, CounterB } from './Components/CounterA';\n// import './App.css';\n\n// // Define the available pages\n// type PageType = 'home' | 'basicCss' | 'contextProvider' | 'useRef' | 'counters';\n\n// interface PageInfo {\n//   id: PageType;\n//   title: string;\n//   description: string;\n//   emoji: string;\n// }\n\n// const pages: PageInfo[] = [\n//   {\n//     id: 'basicCss',\n//     title: 'Basic CSS Tutorial',\n//     description:\n//       'Learn Traditional, Global, Responsive, PostCSS & Module CSS with interactive examples',\n//     emoji: 'üé®',\n//   },\n//   {\n//     id: 'contextProvider',\n//     title: 'Context API Tutorial',\n//     description:\n//       'Master React Context API and useReducer for global state management with practical examples',\n//     emoji: 'üîÑ',\n//   },\n//   {\n//     id: 'useRef',\n//     title: 'useRef Hook Tutorial',\n//     description:\n//       'Learn React useRef hook for DOM access, mutable values, timers, and ref forwarding with hands-on examples',\n//     emoji: 'üéØ',\n//   },\n//   {\n//     id: 'counters',\n//     title: 'React Counters',\n//     description:\n//       'Interactive counter components demonstrating React hooks and state management',\n//     emoji: 'üî¢',\n//   },\n// ];\n\n// function App() {\n//   const [currentPage, setCurrentPage] = useState<PageType>('home');\n//   const [theme, setTheme] = useState<string>('light');\n//   const [counter, setCounter] = useState<number>(0);\n\n//   const toggleTheme = () => {\n//     setTheme(prev => (prev === 'light' ? 'dark' : 'light'));\n//   };\n\n//   const incrementCounter = () => {\n//     setCounter(prev => prev + 1);\n//   };\n\n//   const decrementCounter = () => {\n//     setCounter(prev => prev - 1);\n//   };\n\n//   const navigateToPage = (pageId: PageType) => {\n//     setCurrentPage(pageId);\n//   };\n\n//   const renderCurrentPage = () => {\n//     switch (currentPage) {\n//       case 'basicCss':\n//         return <BasicCss />;\n//       case 'contextProvider':\n//         return <ContextProvider />;\n//       case 'useRef':\n//         return <UseRef />;\n//       case 'counters':\n//         return (\n//           <div className='counters-page'>\n//             <div className='page-header'>\n//               <h1>üî¢ React Counters Demo</h1>\n//               <p>Interactive examples of React hooks and state management</p>\n//             </div>\n//             <div className='counters-container'>\n//               <CounterA count={counter} />\n//               <CounterB />\n//               <div className='counter-controls'>\n//                 <h3>Global Counter: {counter}</h3>\n//                 <div className='button-group'>\n//                   <button\n//                     className='counter-btn increase'\n//                     onClick={incrementCounter}\n//                   >\n//                     ‚ûï Increase\n//                   </button>\n//                   <button\n//                     className='counter-btn decrease'\n//                     onClick={decrementCounter}\n//                   >\n//                     ‚ûñ Decrease\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         );\n//       default:\n//         return (\n//           <div className='home-page'>\n//             <header className='app-header'>\n//               <h1>üöÄ React Learning Hub</h1>\n//               <p className='app-subtitle'>\n//                 Explore interactive examples and tutorials to master React and\n//                 modern web development\n//               </p>\n//             </header>\n\n//             <div className='pages-grid'>\n//               {pages.map(page => (\n//                 <div\n//                   key={page.id}\n//                   className='page-card'\n//                   onClick={() => navigateToPage(page.id)}\n//                   role='button'\n//                   tabIndex={0}\n//                   onKeyDown={e => {\n//                     if (e.key === 'Enter' || e.key === ' ') {\n//                       navigateToPage(page.id);\n//                     }\n//                   }}\n//                 >\n//                   <div className='page-emoji'>{page.emoji}</div>\n//                   <h2 className='page-title'>{page.title}</h2>\n//                   <p className='page-description'>{page.description}</p>\n//                   <div className='page-arrow'>‚Üí</div>\n//                 </div>\n//               ))}\n//             </div>\n\n//             <div className='features-section'>\n//               <h2>üìö What You'll Learn</h2>\n//               <div className='features-grid'>\n//                 <div className='feature-item'>\n//                   <span className='feature-icon'>üé®</span>\n//                   <h3>Modern CSS</h3>\n//                   <p>\n//                     CSS Modules, PostCSS, Responsive Design, and best practices\n//                   </p>\n//                 </div>\n//                 <div className='feature-item'>\n//                   <span className='feature-icon'>‚öõÔ∏è</span>\n//                   <h3>React Fundamentals</h3>\n//                   <p>\n//                     Hooks, State Management, Components, and modern patterns\n//                   </p>\n//                 </div>\n//                 <div className='feature-item'>\n//                   <span className='feature-icon'>üì±</span>\n//                   <h3>Responsive Design</h3>\n//                   <p>\n//                     Mobile-first approach, breakpoints, and adaptive layouts\n//                   </p>\n//                 </div>\n//                 <div className='feature-item'>\n//                   <span className='feature-icon'>üõ†Ô∏è</span>\n//                   <h3>Best Practices</h3>\n//                   <p>\n//                     Code organization, naming conventions, and maintainable\n//                     styles\n//                   </p>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         );\n//     }\n//   };\n\n//   return (\n//     <div className={`app ${theme}`}>\n//       {currentPage !== 'home' && (\n//         <nav className='app-nav'>\n//           <button\n//             className='nav-back'\n//             onClick={() => setCurrentPage('home')}\n//             title='Back to Home'\n//           >\n//             ‚Üê Back to Home\n//           </button>\n//           <div className='nav-title'>\n//             {pages.find(p => p.id === currentPage)?.title || 'Page'}\n//           </div>\n//           <button\n//             className='theme-toggle-nav'\n//             onClick={toggleTheme}\n//             title={`Switch to ${theme === 'light' ? 'Dark' : 'Light'} Mode`}\n//           >\n//             {theme === 'light' ? 'üåô' : '‚òÄÔ∏è'}\n//           </button>\n//         </nav>\n//       )}\n\n//       <main className='app-main'>{renderCurrentPage()}</main>\n\n//       {currentPage === 'home' && (\n//         <footer className='app-footer'>\n//           <div className='footer-content'>\n//             <p>Built with ‚ù§Ô∏è for learning React & Modern CSS</p>\n//             <button className='theme-toggle-footer' onClick={toggleTheme}>\n//               {theme === 'light' ? 'üåô' : '‚òÄÔ∏è'}{' '}\n//               {theme === 'light' ? 'Dark' : 'Light'} Mode\n//             </button>\n//           </div>\n//         </footer>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// /**\n//  * 1. Basic CSS\n//  * 2. Basic React\n//  * 3. Flexbox\n//  * 4. HOC concept => Higher Order Component\n//  * 4. React Hooks: useState, useEffect, useMemo, useCallback, useRef\n//  * 5. Custom Hooks\n//  * 6. Context API\n//  * 8. TypeScript\n//  **/\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { CounterA, CounterB } from './Components/CounterA';\nimport './App.css';\nimport './Components/CounterB';\nimport { useTheme } from './hooks/useTheme';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [counter, setCounter] = useState(0);\n  const {\n    theme,\n    setTheme\n  } = useTheme();\n  // const [theme, setTheme] = useState<string>('light');\n\n  useEffect(() => {\n    let abort = true;\n    async function getData() {\n      const url = 'https://dummyjson.com/users';\n      try {\n        if (abort) {\n          const response = await fetch(url);\n          if (!response.ok) {\n            throw new Error(`Response status: ${response.status}`);\n          }\n          const json = await response.json();\n          abort = false;\n          console.log(json);\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          console.error(error.message);\n        } else {\n          console.error('An unknown error occurred');\n        }\n      }\n    }\n    getData();\n    return () => {\n      console.log('Log Inside useEffect Cleanup');\n      abort = true;\n      // Cleanup code here if needed\n    };\n    // (async () => {\n    //   const result = await getData();\n    //   console.log('Log Inside useEffect:', result);\n    // })();\n  }, []);\n  const toggleTheme = () => {\n    console.log('Log Inside toggleTheme');\n    setTheme(prev => prev === 'light' ? 'dark' : 'light');\n  };\n  const incrementCounter = useCallback(() => {\n    console.log('Log Inside incrementCounter');\n    setCounter(prev => prev + 1);\n  }, []);\n  const decrementCounter = useCallback(() => {\n    console.log('Log Inside decrementCounter');\n    setCounter(prev => prev - 1);\n  }, []);\n\n  // const toggleTheme = useCallback(() => {\n  //   console.log('Log Inside toggleTheme');\n  //   setTheme(prev => (prev === 'light' ? 'dark' : 'light'));\n  // }, []);\n\n  // console.log('Log Outside theme:', theme);\n\n  // 1: Render State & Functions\n  // 2: Render UI\n  // 3: When state changes\n  // 4: Re-render State & Functions => new strate\n\n  // const ComponentA = useMemo(() => {\n  //   console.log('Log Inside ComponentA:');\n  //   return <div className={`component-a ${theme}`}>Component A</div>;\n  // }, [theme]);\n\n  // const ComponentB = useMemo(() => {\n  //   console.log('Log Inside ComponentB:');\n  //   return <div>Component B</div>;\n  // }, []);\n\n  // // Memo function\n  // // function a () {}, const a = () => {}\n  // const ComponentC = useCallback(({ data }: { data: string }) => {\n  //   console.log('Log Inside ComponentC:', data);\n  //   return <div>Component C</div>;\n  // }, []);\n\n  // // Memo value\n  // // const b = () => { a + b }, [a, b] = 3\n  // const ComponentD = useMemo(() => {\n  //   console.log('Log Inside ComponentD:');\n  //   return <div>Component D</div>;\n  // }, []);\n\n  // const Counter = useMemo(() => {\n  //   console.log('Log Inside Counter:', counter);\n  //   return <div className='counter'>Counter: {counter}</div>;\n  // }, [counter]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CounterA, {\n      count: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CounterB, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"theme-toggle\",\n      onChange: e => {\n        console.log('Log Inside onClick:', e);\n      },\n      onClick: incrementCounter,\n      children: \"Increase Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"theme-toggle\",\n      onClick: decrementCounter,\n      children: \"Decrease Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"theme-toggle\",\n        onClick: toggleTheme,\n        children: [theme === 'light' ? 'üåô' : '‚òÄÔ∏è', \"Switch to \", theme === 'light' ? 'Dark' : 'Light', \" Mode\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: `footer ${theme}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Built with \\u2764\\uFE0F for learning React \\u2022 Current theme: \", theme]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"5w83NUknE/lmfogqVdCNnVa8DeY=\", false, function () {\n  return [useTheme];\n});\n_c = App;\nexport default App;\n\n/**\n * 1. Basic CSS\n * 2. Basic React\n * 3. Flexbox\n * 4. HOC concept => Higher Order Component\n * 4. React Hooks: useState, useEffect, useMemo, useCallback, useRef\n * 5. Custom Hooks\n * 6. Context API\n * 8. TypeScript\n **/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallback","useEffect","useState","CounterA","CounterB","useTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","counter","setCounter","theme","setTheme","abort","getData","url","response","fetch","ok","Error","status","json","console","log","error","message","toggleTheme","prev","incrementCounter","decrementCounter","children","count","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","e","onClick","_c","$RefreshReg$"],"sources":["/Users/phongharit/Development/hello_react/hello-react/src/App.tsx"],"sourcesContent":["// import { useState } from 'react';\n// import BasicCss from './Pages/BasicCss';\n// import ContextProvider from './Pages/ContextProvider';\n// import UseRef from './Pages/UseRef';\n// import { CounterA, CounterB } from './Components/CounterA';\n// import './App.css';\n\n// // Define the available pages\n// type PageType = 'home' | 'basicCss' | 'contextProvider' | 'useRef' | 'counters';\n\n// interface PageInfo {\n//   id: PageType;\n//   title: string;\n//   description: string;\n//   emoji: string;\n// }\n\n// const pages: PageInfo[] = [\n//   {\n//     id: 'basicCss',\n//     title: 'Basic CSS Tutorial',\n//     description:\n//       'Learn Traditional, Global, Responsive, PostCSS & Module CSS with interactive examples',\n//     emoji: 'üé®',\n//   },\n//   {\n//     id: 'contextProvider',\n//     title: 'Context API Tutorial',\n//     description:\n//       'Master React Context API and useReducer for global state management with practical examples',\n//     emoji: 'üîÑ',\n//   },\n//   {\n//     id: 'useRef',\n//     title: 'useRef Hook Tutorial',\n//     description:\n//       'Learn React useRef hook for DOM access, mutable values, timers, and ref forwarding with hands-on examples',\n//     emoji: 'üéØ',\n//   },\n//   {\n//     id: 'counters',\n//     title: 'React Counters',\n//     description:\n//       'Interactive counter components demonstrating React hooks and state management',\n//     emoji: 'üî¢',\n//   },\n// ];\n\n// function App() {\n//   const [currentPage, setCurrentPage] = useState<PageType>('home');\n//   const [theme, setTheme] = useState<string>('light');\n//   const [counter, setCounter] = useState<number>(0);\n\n//   const toggleTheme = () => {\n//     setTheme(prev => (prev === 'light' ? 'dark' : 'light'));\n//   };\n\n//   const incrementCounter = () => {\n//     setCounter(prev => prev + 1);\n//   };\n\n//   const decrementCounter = () => {\n//     setCounter(prev => prev - 1);\n//   };\n\n//   const navigateToPage = (pageId: PageType) => {\n//     setCurrentPage(pageId);\n//   };\n\n//   const renderCurrentPage = () => {\n//     switch (currentPage) {\n//       case 'basicCss':\n//         return <BasicCss />;\n//       case 'contextProvider':\n//         return <ContextProvider />;\n//       case 'useRef':\n//         return <UseRef />;\n//       case 'counters':\n//         return (\n//           <div className='counters-page'>\n//             <div className='page-header'>\n//               <h1>üî¢ React Counters Demo</h1>\n//               <p>Interactive examples of React hooks and state management</p>\n//             </div>\n//             <div className='counters-container'>\n//               <CounterA count={counter} />\n//               <CounterB />\n//               <div className='counter-controls'>\n//                 <h3>Global Counter: {counter}</h3>\n//                 <div className='button-group'>\n//                   <button\n//                     className='counter-btn increase'\n//                     onClick={incrementCounter}\n//                   >\n//                     ‚ûï Increase\n//                   </button>\n//                   <button\n//                     className='counter-btn decrease'\n//                     onClick={decrementCounter}\n//                   >\n//                     ‚ûñ Decrease\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         );\n//       default:\n//         return (\n//           <div className='home-page'>\n//             <header className='app-header'>\n//               <h1>üöÄ React Learning Hub</h1>\n//               <p className='app-subtitle'>\n//                 Explore interactive examples and tutorials to master React and\n//                 modern web development\n//               </p>\n//             </header>\n\n//             <div className='pages-grid'>\n//               {pages.map(page => (\n//                 <div\n//                   key={page.id}\n//                   className='page-card'\n//                   onClick={() => navigateToPage(page.id)}\n//                   role='button'\n//                   tabIndex={0}\n//                   onKeyDown={e => {\n//                     if (e.key === 'Enter' || e.key === ' ') {\n//                       navigateToPage(page.id);\n//                     }\n//                   }}\n//                 >\n//                   <div className='page-emoji'>{page.emoji}</div>\n//                   <h2 className='page-title'>{page.title}</h2>\n//                   <p className='page-description'>{page.description}</p>\n//                   <div className='page-arrow'>‚Üí</div>\n//                 </div>\n//               ))}\n//             </div>\n\n//             <div className='features-section'>\n//               <h2>üìö What You'll Learn</h2>\n//               <div className='features-grid'>\n//                 <div className='feature-item'>\n//                   <span className='feature-icon'>üé®</span>\n//                   <h3>Modern CSS</h3>\n//                   <p>\n//                     CSS Modules, PostCSS, Responsive Design, and best practices\n//                   </p>\n//                 </div>\n//                 <div className='feature-item'>\n//                   <span className='feature-icon'>‚öõÔ∏è</span>\n//                   <h3>React Fundamentals</h3>\n//                   <p>\n//                     Hooks, State Management, Components, and modern patterns\n//                   </p>\n//                 </div>\n//                 <div className='feature-item'>\n//                   <span className='feature-icon'>üì±</span>\n//                   <h3>Responsive Design</h3>\n//                   <p>\n//                     Mobile-first approach, breakpoints, and adaptive layouts\n//                   </p>\n//                 </div>\n//                 <div className='feature-item'>\n//                   <span className='feature-icon'>üõ†Ô∏è</span>\n//                   <h3>Best Practices</h3>\n//                   <p>\n//                     Code organization, naming conventions, and maintainable\n//                     styles\n//                   </p>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         );\n//     }\n//   };\n\n//   return (\n//     <div className={`app ${theme}`}>\n//       {currentPage !== 'home' && (\n//         <nav className='app-nav'>\n//           <button\n//             className='nav-back'\n//             onClick={() => setCurrentPage('home')}\n//             title='Back to Home'\n//           >\n//             ‚Üê Back to Home\n//           </button>\n//           <div className='nav-title'>\n//             {pages.find(p => p.id === currentPage)?.title || 'Page'}\n//           </div>\n//           <button\n//             className='theme-toggle-nav'\n//             onClick={toggleTheme}\n//             title={`Switch to ${theme === 'light' ? 'Dark' : 'Light'} Mode`}\n//           >\n//             {theme === 'light' ? 'üåô' : '‚òÄÔ∏è'}\n//           </button>\n//         </nav>\n//       )}\n\n//       <main className='app-main'>{renderCurrentPage()}</main>\n\n//       {currentPage === 'home' && (\n//         <footer className='app-footer'>\n//           <div className='footer-content'>\n//             <p>Built with ‚ù§Ô∏è for learning React & Modern CSS</p>\n//             <button className='theme-toggle-footer' onClick={toggleTheme}>\n//               {theme === 'light' ? 'üåô' : '‚òÄÔ∏è'}{' '}\n//               {theme === 'light' ? 'Dark' : 'Light'} Mode\n//             </button>\n//           </div>\n//         </footer>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// /**\n//  * 1. Basic CSS\n//  * 2. Basic React\n//  * 3. Flexbox\n//  * 4. HOC concept => Higher Order Component\n//  * 4. React Hooks: useState, useEffect, useMemo, useCallback, useRef\n//  * 5. Custom Hooks\n//  * 6. Context API\n//  * 8. TypeScript\n//  **/\n\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { CounterA, CounterB } from './Components/CounterA';\nimport './App.css';\nimport {} from './Components/CounterB';\nimport { useTheme } from './hooks/useTheme';\n\nfunction App() {\n  const [counter, setCounter] = useState<number>(0);\n  const { theme, setTheme } = useTheme();\n  // const [theme, setTheme] = useState<string>('light');\n\n  useEffect(() => {\n    let abort = true;\n    async function getData() {\n      const url = 'https://dummyjson.com/users';\n      try {\n        if (abort) {\n          const response = await fetch(url);\n          if (!response.ok) {\n            throw new Error(`Response status: ${response.status}`);\n          }\n\n          const json = await response.json();\n          abort = false;\n          console.log(json);\n        }\n      } catch (error: unknown) {\n        if (error instanceof Error) {\n          console.error(error.message);\n        } else {\n          console.error('An unknown error occurred');\n        }\n      }\n    }\n\n    getData();\n\n    return () => {\n      console.log('Log Inside useEffect Cleanup');\n      abort = true;\n      // Cleanup code here if needed\n    };\n    // (async () => {\n    //   const result = await getData();\n    //   console.log('Log Inside useEffect:', result);\n    // })();\n  }, []);\n\n  const toggleTheme = () => {\n    console.log('Log Inside toggleTheme');\n    setTheme(prev => (prev === 'light' ? 'dark' : 'light'));\n  };\n\n  const incrementCounter = useCallback(() => {\n    console.log('Log Inside incrementCounter');\n    setCounter(prev => prev + 1);\n  }, []);\n\n  const decrementCounter = useCallback(() => {\n    console.log('Log Inside decrementCounter');\n    setCounter(prev => prev - 1);\n  }, []);\n\n  // const toggleTheme = useCallback(() => {\n  //   console.log('Log Inside toggleTheme');\n  //   setTheme(prev => (prev === 'light' ? 'dark' : 'light'));\n  // }, []);\n\n  // console.log('Log Outside theme:', theme);\n\n  // 1: Render State & Functions\n  // 2: Render UI\n  // 3: When state changes\n  // 4: Re-render State & Functions => new strate\n\n  // const ComponentA = useMemo(() => {\n  //   console.log('Log Inside ComponentA:');\n  //   return <div className={`component-a ${theme}`}>Component A</div>;\n  // }, [theme]);\n\n  // const ComponentB = useMemo(() => {\n  //   console.log('Log Inside ComponentB:');\n  //   return <div>Component B</div>;\n  // }, []);\n\n  // // Memo function\n  // // function a () {}, const a = () => {}\n  // const ComponentC = useCallback(({ data }: { data: string }) => {\n  //   console.log('Log Inside ComponentC:', data);\n  //   return <div>Component C</div>;\n  // }, []);\n\n  // // Memo value\n  // // const b = () => { a + b }, [a, b] = 3\n  // const ComponentD = useMemo(() => {\n  //   console.log('Log Inside ComponentD:');\n  //   return <div>Component D</div>;\n  // }, []);\n\n  // const Counter = useMemo(() => {\n  //   console.log('Log Inside Counter:', counter);\n  //   return <div className='counter'>Counter: {counter}</div>;\n  // }, [counter]);\n\n  return (\n    <>\n      <CounterA count={counter} />\n      <CounterB />\n      {/* {<>Counter: {Counter}</>} */}\n      {/** Increase */}\n      <button\n        className='theme-toggle'\n        onChange={e => {\n          console.log('Log Inside onClick:', e);\n        }}\n        onClick={incrementCounter}\n      >\n        Increase Counter\n      </button>\n\n      {/** Decrease */}\n      <button className='theme-toggle' onClick={decrementCounter}>\n        Decrease Counter\n      </button>\n\n      {/* {ComponentA}\n      {ComponentB}\n      <ComponentC data='Kid' />\n      {ComponentD} */}\n      {/* <ComponentD /> */}\n      <div>\n        <button className='theme-toggle' onClick={toggleTheme}>\n          {theme === 'light' ? 'üåô' : '‚òÄÔ∏è'}\n          Switch to {theme === 'light' ? 'Dark' : 'Light'} Mode\n        </button>\n\n        {/* Footer */}\n        <footer className={`footer ${theme}`}>\n          <p>Built with ‚ù§Ô∏è for learning React ‚Ä¢ Current theme: {theme}</p>\n        </footer>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n/**\n * 1. Basic CSS\n * 2. Basic React\n * 3. Flexbox\n * 4. HOC concept => Higher Order Component\n * 4. React Hooks: useState, useEffect, useMemo, useCallback, useRef\n * 5. Custom Hooks\n * 6. Context API\n * 8. TypeScript\n **/\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,EAAEC,SAAS,EAAWC,QAAQ,QAAQ,OAAO;AACjE,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,uBAAuB;AAC1D,OAAO,WA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}